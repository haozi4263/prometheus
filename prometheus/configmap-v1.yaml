apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus
  namespace: kube-system
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
    scrape_configs:

    - job_name: 'istio-mesh'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kube-system;istio-mixer;prometheus

    - job_name: 'envoy'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kube-system;istio-mixer;statsd-prom

    - job_name: 'mixer'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kube-system;istio-mixer;http-monitoring

    - job_name: 'pilot'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.

      kubernetes_sd_configs:
      - role: endpoints

      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: kube-system;istio-pilot;http-monitoring

    # scrape config for API servers
    - job_name: 'kubernetes-apiservers'
      kubernetes_sd_configs:
      - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

    # scrape config for nodes (kubelet)
    - job_name: 'kubernetes-nodes'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

    # Scrape config for Kubelet cAdvisor.
    #
    # This is required for Kubernetes 1.7.3 and later, where cAdvisor metrics
    # (those whose names begin with 'container_') have been removed from the
    # Kubelet metrics endpoint.  This job scrapes the cAdvisor endpoint to
    # retrieve those metrics.
    #
    # In Kubernetes 1.7.0-1.7.2, these metrics are only exposed on the cAdvisor
    # HTTP endpoint; use "replacement: /api/v1/nodes/${1}:4194/proxy/metrics"
    # in that case (and ensure cAdvisor's HTTP server hasn't been disabled with
    # the --cadvisor-port=0 Kubelet flag).
    #
    # This job is not necessary and should be removed in Kubernetes 1.6 and
    # earlier versions, or it will cause the metrics to be scraped twice.
    - job_name: 'kubernetes-cadvisor'
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      kubernetes_sd_configs:
      - role: node
      relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    # scrape config for service endpoints.
    - job_name: 'kubernetes-service-endpoints'
      kubernetes_sd_configs:
      - role: endpoints
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
        action: replace
        target_label: __scheme__
        regex: (https?)
      - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
        action: replace
        target_label: __address__
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
      - action: labelmap
        regex: __meta_kubernetes_service_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_service_name]
        action: replace
        target_label: kubernetes_name

    # Example scrape config for pods
    - job_name: 'kubernetes-pods'
      kubernetes_sd_configs:
      - role: pod

      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod_name

    - job_name: 'baidu-prod'
      static_configs:

        - targets: ['192.168.xx.82:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-prod-192.168.xx.82

        - targets: ['192.168.xx.83:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-prod-192.168.xx.83

        - targets: ['192.168.xx.84:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-prod-192.168.xx.84

        - targets: ['192.168.xx.85:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-prod-192.168.xx.85

        - targets: ['192.168.xx.86:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-prod-192.168.xx.86

        - targets: ['192.168.xx.87:5999']
          labels:
            group: 'baidu-prod'
            kubernetes_io_hostname: baidu-pord-192.168.xx.87    

    - job_name: 'linux-server'
      static_configs:
        - targets: ['192.168.xx.89:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.89
            hostname: 192.168.xx.89
            app: jenkins

        - targets: ['192.168.xx.43:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.43
            hostname: 192.168.xx.43
            app: storm01

        - targets: ['192.168.xx.44:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.44
            hostname: 192.168.xx.44
            app: storm02

        - targets: ['192.168.xx.112:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.112
            hostname: 192.168.xx.112
            app: storm03

        - targets: ['192.168.xx.118:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.118
            hostname: 192.168.xx.118
            app: kafka01

        - targets: ['192.168.xx.119:9100']
          labels:
            group: 'linux-server'
            instance: 192.168.xx.119
            hostname: 192.168.xx.119
            app: kafka02

    - job_name: 'Hadoop'
      static_configs:
        - targets: ['192.168.xx.71:9100']
          labels:
            group: 'Hadoop'
            instance: "emr-header-1"
            hostname: 192.168.xx.71

        - targets: ['192.168.xx.72:9100']
          labels:
            group: 'Hadoop'
            instance: "emr-worker-1"
            hostname: 192.168.xx.72

        - targets: ['192.168.xx.73:9100']
          labels:
            group: 'Hadoop'
            instance: "emr-worker-2"
            hostname: 192.168.xx.73

        - targets: ['192.168.xx.74:9100']
          labels:
            group: 'Hadoop'
            instance: "emr-worker-3"
            hostname: 192.168.xx.74        


    - job_name: 'baidu'
      static_configs:
        - targets: ['192.168.xx.65:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.65

        - targets: ['192.168.xx.64:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.64 
 
        - targets: ['192.168.xx.63:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.63

        - targets: ['192.168.xx.68:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.68

        - targets: ['192.168.xx.69:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.69

        - targets: ['192.168.xx.77:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.77

        - targets: ['192.168.xx.78:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.78

        - targets: ['192.168.xx.88:7000']
          labels:
            group: 'baidu'
            kubernetes_io_hostname: 192.168.xx.88
    - job_name: mysql
      static_configs:
        - targets: ['192.168.xx.112:9104']
          labels:
            group: 'mysqldb'
            instance: 112db
            host: 192.168.xx.112

    - job_name: redis
      static_configs:
        - targets: ['192.168.xx.78:9121']
          labels:
            instance: redisdb78
            host: 192.168.xx.78

    - job_name: kafka
      static_configs:
        - targets: ['192.168.xx.118:9308']
          labels:
            instance: 192.168.xx.118
            host: 192.168.xx.118
            app: kafka01
        - targets: ['192.168.xx.119:9308']
          labels:
            instance: 192.168.xx.119
            host: 192.168.xx.119
            app: kafka02

    - job_name: 'www.icsoc.net'
      scrape_interval: 30s
      metrics_path: /probe
      params:
        module: [http_2xx]
      static_configs:
        - targets:
          - http://www.baidu.
          - http://www.baidu.com/index.html
          - http://wx-prod.icsoc.net/echo
          - http://baidu-background.icsoc.net
        
      relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: 192.168.xx.112:9115

    - job_name: 'network-monitor'
      scrape_interval: 5s
      metrics_path: /probe
      params:
        module: [icmp]  #ping
      static_configs:
        - targets: ['59.110.xx.xx']
          labels:
            group: '生产环境阿里云baidu-SLB监控'
        - targets: ['47.93.xx.xx']
          labels:
            group: '生产环境baidu-wss-SLB监控'
        - targets: ['101.xx.175.xx']
          labels:
            group: '生产环境baidu监控'
        - targets: ['59.110.144.xx']
          labels:
            group: '生产环境baidu-account监控'
      relabel_configs:
        - source_labels: [__address__]
          regex: (.*)(:80)?
          target_label: __param_target
          replacement: ${1}
        - source_labels: [__param_target]
          regex: (.*)
          target_label: ping
          replacement: ${1}
        - source_labels: []
          regex: .*
          target_label: __address__
          replacement: 192.168.xx.112:9115

    - job_name: 'bigdata-port'
      metrics_path: /probe
      params:
        module: [tcp_connect]
      static_configs:
        - targets:
          - 192.168.xx.118:9092
          - 192.168.xx.119:9092
          - 192.168.xx.43:6700
          - 192.168.xx.44:6700
          - 192.168.xx.112:6700
          - 192.168.xx.170:2181
          - 192.168.xx.171:2181
          - 192.168.xx.173:2181
      relabel_configs:
        - source_labels: [__address__]
          target_label: __param_target
        - source_labels: [__param_target]
          target_label: instance
        - target_label: __address__
          replacement: 192.168.xx.xx:9115
